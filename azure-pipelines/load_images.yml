parameters:
  - name: DOCKER_IMAGES_SLUG
    type: string
    default: ironwood
  - name: CONDITION
    type: string
    default: "true"

steps:
  - task: Cache@2
    inputs:
      key: ${{ parameters.DOCKER_IMAGES_SLUG }} | $(CACHE_KEY_IMAGES)
      path: $(IMAGE_CACHE_PATH)
      cacheHitVar: 'ImagesHit'
    condition: ${{ parameters.CONDITION }}
    displayName: 'Docker images cache'

  - script: |
      ls -l $(IMAGE_CACHE_PATH)
      docker images
      cat $(IMAGE_CACHE_PATH)/edx-${{ parameters.DOCKER_IMAGES_SLUG }}-nostatic.tar.xz | unxz | docker load
      docker images
      docker tag derex/edx-${{ parameters.DOCKER_IMAGES_SLUG }}-nostatic:$(grep __version__ derex/runner/__init__.py |sed 's/[^"]*"//;s/"//') derex/edx-${{ parameters.DOCKER_IMAGES_SLUG }}-nostatic
    condition: ${{ parameters.CONDITION }}
    displayName: 'Load ${{ parameters.DOCKER_IMAGES_SLUG }}-nostatic images'

  - script: |
      ls -l $(IMAGE_CACHE_PATH)
      docker images
      cat $(IMAGE_CACHE_PATH)/edx-${{ parameters.DOCKER_IMAGES_SLUG }}-dev.tar.xz | unxz | docker load
      docker images
      docker tag derex/edx-${{ parameters.DOCKER_IMAGES_SLUG }}-dev:$(grep __version__ derex/runner/__init__.py |sed 's/[^"]*"//;s/"//') derex/edx-${{ parameters.DOCKER_IMAGES_SLUG }}-dev
    condition: ${{ parameters.CONDITION }}
    displayName: 'Load ${{ parameters.DOCKER_IMAGES_SLUG }}-dev images'
