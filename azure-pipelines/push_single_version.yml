steps:
  - task: Cache@2
    inputs:
      key: SENTINEL=1 | "$(Agent.OS) $(Agent.JobName)"' | $(CACHE_KEY_IMAGES)
      path: $(SENTINEL_CACHE_PATH)
      cacheHitVar: 'ImagesSentinelHit'
    displayName: 'Docker images sentinel cache'

  - script: diff <(git rev-parse --verify HEAD) $(SENTINEL_CACHE_PATH)/built_version || echo '##vso[task.setvariable variable=needs_build]true'
    displayName: 'Set needs_build pipeline variable'

  - script: docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}
    displayName: 'Log into docker registry'
    condition: ne(variables.needs_build, 'false')
    env:
      DOCKER_USERNAME: $(DOCKER_USERNAME)
      DOCKER_PASSWORD: $(DOCKER_PASSWORD)

  - template: load_images.yml
    parameters:
        DOCKER_IMAGES_SLUG: $(DOCKER_IMAGES_SLUG)
        CONDITION: "ne(variables.needs_build, 'false')"

  - script: docker push derex/edx-$(DOCKER_IMAGES_SLUG)-dev
    condition: ne(variables.needs_build, 'false')
    displayName: 'Push $(DOCKER_IMAGES_SLUG) dev image'

  - script: docker push derex/edx-$(DOCKER_IMAGES_SLUG)-nostatic
    condition: ne(variables.needs_build, 'false')
    displayName: 'Push $(DOCKER_IMAGES_SLUG) nostatic image'
