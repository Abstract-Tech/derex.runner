# Services needed for Open edX to work
version: "3.5"
services:
  mongodb:
    image: mongo:3.2.21
    restart: unless-stopped
    container_name: mongodb
    command: mongod --smallfiles --nojournal
      --storageEngine wiredTiger
      --wiredTigerEngineConfigString="cache_size=${MONGO_CACHE_MB:-200}M"
    volumes:
      - derex_mongodb:/data/db
    networks:
      - derex

  mysql:
    image: mysql:5.6.36
    restart: unless-stopped
    container_name: mysql
    command: mysqld --character-set-server=utf8 --collation-server=utf8_general_ci
    environment:
      MYSQL_ROOT_PASSWORD: secret
    volumes:
      - derex_mysql:/var/lib/mysql
    networks:
      - derex

  elasticsearch:
    image: elasticsearch:1.5.2
    restart: unless-stopped
    container_name: elasticsearch
    environment:
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - "cluster.name=openedx"
      # For the memory lock to work, the container should be started with
      # sufficient high a value for "Max locked memory".
      # For docker on a systemctl distro (like Ubuntu) this can be achieved with
      # echo -e "[Service]\nLimitMEMLOCK=infinity" | SYSTEMD_EDITOR=tee sudo -E systemctl edit docker.service
      # sudo systemctl daemon-reload
      # sudo systemctl restart docker
      - "bootstrap.memory_lock=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - derex_elasticsearch:/usr/share/elasticsearch/data
    networks:
      - derex

  rabbitmq:
    image: rabbitmq:3.6.16-alpine
    restart: unless-stopped
    container_name: rabbitmq
    volumes:
      - derex_rabbitmq:/var/lib/rabbitmq
    networks:
      - derex

  mailslurper:
    image: derex/mailslurper
    restart: unless-stopped
    container_name: smtp
    volumes:
      - ./mailslurper.json:/config.json
    depends_on:
      - mysql
    networks:
      derex:
        aliases:
          - mailslurper.localhost.derex

  memcached:
    image: memcached:1.6.3-alpine
    restart: unless-stopped
    container_name: memcached
    networks:
      - derex

  minio:
    image: minio/minio:RELEASE.2020-04-23T00-58-49Z
    volumes:
      - derex_minio:/data
    environment:
      MINIO_ACCESS_KEY: minio_derex
      MINIO_SECRET_KEY: "{{ MINIO_SECRET_KEY }}"
    command: server --address :80 /data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      derex:
        aliases:
          - minio.localhost.derex
          - minio.localhost

  httpserver:
    image: caddy/caddy
    ports:
      - 127.0.0.1:80:80
      - 127.0.0.1:81:81
      - 127.0.0.1:4301:4301
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "-q",
          "-O",
          "-",
          "http://localhost:8080/minio/health/live",
        ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - derex

volumes:
  derex_mongodb:
    external: true
  derex_mysql:
    external: true
  derex_elasticsearch:
    external: true
  derex_rabbitmq:
    external: true
  derex_minio:
    external: true

networks:
  derex:
    name: derex
