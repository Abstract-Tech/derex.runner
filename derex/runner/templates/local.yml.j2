# Open edX services
version: "3.5"

x-common:
  &common-conf
  {% if project.runmode.name == "production" -%}
  image: {{ project.image_tag }}
  {% else -%}
  image: {{ project.requirements_image_tag }}
  {% endif -%}
  tmpfs:
    - /tmp/
  networks:
    - derex
  volumes:
    - derex_{{ project.name }}_media:/openedx/media
    - derex_{{ project.name }}_data:/openedx/data/
    - {{ project.settings_directory_path() }}:/openedx/edx-platform/lms/envs/derex_project
    - {{ project.settings_directory_path() }}:/openedx/edx-platform/cms/envs/derex_project
    {%- if project.requirements_dir %}
    - {{ project.requirements_dir }}:/openedx/derex.requirements
    {%- endif -%}
    {%- if project.fixtures_dir %}
    - {{ project.fixtures_dir }}:/openedx/fixtures
    {%- endif -%}
    {%- if project.themes_dir %}
    - {{ project.themes_dir }}:/openedx/themes
    {%- endif %}
  environment:
    &common-env
    DEREX_PROJECT: {{ project.name }}
    SETTINGS: derex_project.{{ project.settings.name }}
    MYSQL_DB: {{ project.mysql_db_name }}
    {%- for key, value in project.get_container_env().items() %}
    {{ key }}: {{ value }}
    {%- endfor %}

services:
  flower:
    <<: *common-conf
    image: {{ project.base_image }}
    command:
      sh -c 'echo Obtaining broker configuration from edx. This is a bit slow;
             export FLOWER_OPTIONS=$$(echo "from django.conf import settings; print(\"--broker=\" + settings.BROKER_URL + \" --broker_api=http://\" + settings.CELERY_BROKER_USER + \":\" + settings.CELERY_BROKER_PASSWORD + \"@\" + settings.CELERY_BROKER_HOSTNAME + \":15672/api/\") " | ./manage.py $$SERVICE_VARIANT shell);
             echo Done. Flower options are \"$$FLOWER_OPTIONS\";
             exec flower --port=5555 $$FLOWER_OPTIONS'
    ports:
      - 127.0.0.1:5555:5555
    container_name: {{ project.name }}_flower
    networks:
      - derex

  lms:
    <<: *common-conf
    {% if project.runmode.value == "debug" -%}
    command:
      sh -c 'exec ./manage.py $${SERVICE_VARIANT} runserver --noreload 0:4700'
    {% else -%}
    command:
      sh -c 'exec gunicorn --name $${SERVICE_VARIANT}
        --bind=0.0.0.0:4700
        --max-requests=1000
        wsgi:application'
    {% endif -%}
    environment:
      <<: *common-env
      SERVICE_VARIANT: lms
      DJANGO_SETTINGS_MODULE: lms.envs.derex_project.{{ project.settings.name }}
    ports:
      - 127.0.0.1:4700:4700
      - 127.0.0.1:4701:4701
    container_name: {{ project.name }}_lms

  cms:
    <<: *common-conf
    {% if project.runmode.value == "debug" -%}
    command:
      sh -c 'exec ./manage.py $${SERVICE_VARIANT} runserver --noreload 0:4800'
    {% else -%}
    command:
      sh -c 'exec gunicorn --name $${SERVICE_VARIANT}
        --bind=0.0.0.0:4800
        --max-requests=1000
        wsgi:application'
    {% endif -%}
    environment:
      <<: *common-env
      SERVICE_VARIANT: cms
      DJANGO_SETTINGS_MODULE: cms.envs.derex_project.{{ project.settings.name }}
    ports:
      - 127.0.0.1:4800:4800
      - 127.0.0.1:4801:4801
    container_name: {{ project.name }}_cms

  lms_worker:
    <<: *common-conf
    command:
      sh -c './manage.py lms celery worker --loglevel=INFO -n lms.edx -Q lms.default'
    container_name: {{ project.name }}_lms_worker
    environment:
      <<: *common-env
      C_FORCE_ROOT: "True"
      SERVICE_VARIANT: lms
      DJANGO_SETTINGS_MODULE: lms.envs.derex_project.{{ project.settings.name }}

  cms_worker:
    <<: *common-conf
    command:
      sh -c './manage.py lms celery worker --loglevel=INFO -n cms.edx -Q cms.default'
    container_name: {{ project.name }}_cms_worker
    environment:
      <<: *common-env
      C_FORCE_ROOT: "True"
      SERVICE_VARIANT: cms
      DJANGO_SETTINGS_MODULE: cms.envs.derex_project.{{ project.settings.name }}

networks:
  derex:
    name: derex

volumes:
  derex_{{ project.name }}_data:
  derex_{{ project.name }}_media:
