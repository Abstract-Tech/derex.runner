# Open edX services
version: "3.5"

x-common:
  &common-conf
  image: {{ project.requirements_image_tag }}
  tmpfs:
    - /tmp/
  networks:
    - derex
  volumes:
    - derex_{{ project.name }}_media:/openedx/media
    - derex_{{ project.name }}_data:/openedx/data/
    {% if project.settings_dir -%}
    - {{ project.settings_dir }}:/openedx/edx-platform/lms/envs/{{ project.name }}
    - {{ project.settings_dir }}:/openedx/edx-platform/cms/envs/{{ project.name }}
    {%- endif -%}
    {%- if project.requirements_dir %}
    - {{ project.requirements_dir }}:/openedx/derex.requirements
    {%- endif -%}
    {%- if project.fixtures_dir %}
    - {{ project.fixtures_dir }}:/openedx/fixtures
    {%- endif -%}
    {%- if project.themes_dir %}
    - {{ project.themes_dir }}:/openedx/themes
    {%- endif %}
  environment:
    &common-env
    {% if project.settings_dir -%}
    DJANGO_SETTINGS_MODULE: lms.envs.{{ project.name }}.base
    SETTINGS: {{ project.name }}.base
    {%- else -%}
    DJANGO_SETTINGS_MODULE: lms.envs.derex.base
    SETTINGS: derex.base
    {%- endif %}
    MYSQL_DB: {{ project.mysql_db_name }}


x-common-cms:
  environment:
    &cms-env
    {% if project.settings_dir -%}
    DJANGO_SETTINGS_MODULE: cms.envs.{{ project.name }}.base
    SETTINGS: {{ project.name }}.base
    {%- else -%}
    DJANGO_SETTINGS_MODULE: cms.envs.derex.base
    SETTINGS: derex.base
    {%- endif %}
    MYSQL_DB: {{ project.mysql_db_name }}

services:
  flower:
    image: derex/openedx-ironwood
    command:
      sh -c 'exec flower --port=5555
        --broker=$$(python -c "from django.conf import settings; print(settings.BROKER_URL)")'
    ports:
      - 127.0.0.1:5555:5555
    container_name: {{ project.name }}_flower
    networks:
      - derex

  lms:
    <<: *common-conf
    command:
      sh -c 'exec ./manage.py $${SERVICE_VARIANT} runserver --noreload 0:4700'
    ports:
      - 127.0.0.1:4700:4700
      - 127.0.0.1:4701:4701
    container_name: {{ project.name }}_lms

  cms:
    <<: *common-conf
    command:
      sh -c 'exec ./manage.py $${SERVICE_VARIANT} runserver --noreload 0:4800'
    environment:
      <<: *cms-env
      SERVICE_VARIANT: cms
      DJANGO_SETTINGS_MODULE: cms.envs.{{ project.name }}.base
    ports:
      - 127.0.0.1:4800:4800
      - 127.0.0.1:4801:4801
    container_name: {{ project.name }}_cms

{% if final_image %}
  lms_final:
    <<: *common-conf
    image: {{ final_image }}
    command:
      sh -c 'exec gunicorn --name $${SERVICE_VARIANT}
        --bind=0.0.0.0:4710
        --max-requests=1000
        wsgi:application'
    ports:
      - 127.0.0.1:4710:4710
      - 127.0.0.1:4711:4711
    container_name: {{ project.name }}_lms_final

  cms_final:
    <<: *common-conf
    image: {{ final_image }}
    command:
      sh -c 'exec gunicorn --name $${SERVICE_VARIANT}
        --bind=0.0.0.0:4810
        --max-requests=1000
        wsgi:application'
    environment:
      <<: *cms-env
      SERVICE_VARIANT: cms
      DJANGO_SETTINGS_MODULE: cms.envs.{{ project.name }}.base
    ports:
      - 127.0.0.1:4810:4810
      - 127.0.0.1:4811:4811
    container_name: {{ project.name }}_cms_final
{% endif %}
  worker:
    <<: *common-conf
    command:
      sh -c 'celery worker
        -A edx_celery.APP
        --loglevel=info
        --hostname=edx.$${SERVICE_VARIANT}
        --concurrency=1
        --maxtasksperchild 1000'
    container_name: {{ project.name }}_worker
    environment:
      <<: *common-env
      C_FORCE_ROOT: "True"

networks:
  derex:
    name: derex

volumes:
  derex_{{ project.name }}_data:
  derex_{{ project.name }}_media:
